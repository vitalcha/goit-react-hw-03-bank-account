{"version":3,"sources":["components/TransactionHistory/transactionHistory.module.css","components/Dashboard/dashboard.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","components/App.js","index.js","components/Controls/controls.module.css","components/Balance/balance.module.css"],"names":["module","exports","Controls","handleChange","onDeposit","onWithdraw","amount","className","s","controls","onChange","controls__input","type","name","min","value","onClick","controls__button","Balance","balance","income","expenses","total__deposit","total__withdraw","total__balance","TransactionHistory","transactions","history","history__header","map","el","key","id","history__deposit","date","Dashboard","state","handleDeposit","toast","warn","position","POSITION","TOP_CENTER","setState","prevState","Number","toFixed","changeTransactions","reset","handleWithdraw","BOTTOM_CENTER","error","e","target","newTransactions","uuid","Date","toLocaleString","transactionFromLocalStorage","localStorage","getItem","transactionFromLocalStorageBalance","this","JSON","parse","prevProps","setItem","stringify","reduce","acc","newAcc","dashboard","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b959ea4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"transactionHistory_history__9Q2Wh\",\"history__header\":\"transactionHistory_history__header__1g6NM\",\"history__deposit\":\"transactionHistory_history__deposit__3cDYn\",\"history__withdrawal\":\"transactionHistory_history__withdrawal__3hzH7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"dashboard_dashboard__2eJ5J\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './controls.module.css';\n\nconst Controls = ({ handleChange, onDeposit, onWithdraw, amount }) => (\n  <section className={s.controls}>\n    <input\n      onChange={handleChange}\n      className={s.controls__input}\n      type=\"number\"\n      name=\"amount\"\n      min=\"0\"\n      value={amount === 0 ? '' : amount}\n    />\n    <button onClick={onDeposit} className={s.controls__button} type=\"button\">\n      Deposit\n    </button>\n    <button onClick={onWithdraw} className={s.controls__button} type=\"button\">\n      Withdraw\n    </button>\n  </section>\n);\n\nControls.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  onDeposit: PropTypes.func.isRequired,\n  onWithdraw: PropTypes.func.isRequired,\n  amount: PropTypes.number.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './balance.module.css';\n\nconst Balance = ({ balance, income, expenses }) => (\n  <section className={s.balance}>\n    <span className={s.total__deposit}>&#8593;{income}$</span>\n    <span className={s.total__withdraw}>&#8595;{expenses}$</span>\n    <span className={s.total__balance}>Balance: {balance}$</span>\n  </section>\n);\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  income: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './transactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => (\n  <table className={s.history}>\n    <thead>\n      <tr className={s.history__header}>\n        <th>Transaction</th>\n        <th>Amount</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {transactions.map(el => (\n        <tr key={el.id} className={s.history__deposit}>\n          <td>{el.type}</td>\n          <td>{el.amount}</td>\n          <td>{el.date}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      amount: PropTypes.number,\n      date: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport uuid from 'uuid/v1';\nimport { ToastContainer, toast } from 'react-toastify';\nimport s from './dashboard.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    amount: 0,\n    balance: 1000,\n  };\n\n  componentDidMount() {\n    try {\n      const transactionFromLocalStorage = localStorage.getItem('transactions');\n      const transactionFromLocalStorageBalance = localStorage.getItem(\n        'balance',\n      );\n      if (transactionFromLocalStorage && transactionFromLocalStorageBalance) {\n        this.setState({\n          transactions: JSON.parse(transactionFromLocalStorage),\n          balance: JSON.parse(transactionFromLocalStorageBalance),\n        });\n      }\n    } catch (error) {}\n    return '';\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions, balance } = this.state;\n    if (\n      prevState.transactions !== transactions &&\n      prevState.balance !== balance\n    ) {\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n      localStorage.setItem('balance', JSON.stringify(balance));\n    }\n  }\n\n  handleDeposit = () => {\n    const { amount } = this.state;\n    if (amount === 0 || amount < 0) {\n      return toast.warn('Введите сумму для проведения операции!', {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    }\n\n    this.setState(prevState => ({\n      balance: +Number(prevState.balance + prevState.amount).toFixed(2),\n    }));\n    this.changeTransactions('DEPOSIT');\n    return this.reset();\n  };\n\n  handleWithdraw = () => {\n    const { balance } = this.state;\n    const { amount } = this.state;\n\n    if (amount === 0 || amount < 0) {\n      return toast.warn('Введите сумму для проведения операции!', {\n        position: toast.POSITION.BOTTOM_CENTER,\n      });\n    }\n\n    if (balance < amount) {\n      return toast.error(\n        'На счету недостаточно средств для проведения операции!',\n        {\n          position: toast.POSITION.BOTTOM_CENTER,\n        },\n      );\n    }\n\n    this.setState(prevState => ({\n      balance: +Number(prevState.balance - prevState.amount).toFixed(2),\n    }));\n    this.changeTransactions('WITHDRAW');\n    return this.reset();\n  };\n\n  reset = () => {\n    this.setState({ amount: 0 });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: +value });\n  };\n\n  changeTransactions = type => {\n    const { amount } = this.state;\n    const newTransactions = {\n      id: uuid(),\n      type,\n      amount,\n      date: new Date().toLocaleString(),\n    };\n\n    this.setState(state => ({\n      transactions: [...state.transactions, newTransactions],\n    }));\n  };\n\n  render() {\n    const { transactions, amount } = this.state;\n    const { balance } = this.state;\n    const income = transactions.reduce((acc, el) => {\n      let newAcc = acc;\n      if (el.type === 'DEPOSIT') newAcc = acc + el.amount;\n      return newAcc;\n    }, 0);\n\n    const expenses = transactions.reduce((acc, el) => {\n      let newAcc = acc;\n      if (el.type === 'WITHDRAW') newAcc = acc + el.amount;\n      return newAcc;\n    }, 0);\n\n    return (\n      <div className={s.dashboard}>\n        <Controls\n          handleChange={this.handleChange}\n          onDeposit={this.handleDeposit}\n          onWithdraw={this.handleWithdraw}\n          amount={amount}\n        />\n        <Balance balance={balance} income={income} expenses={expenses} />\n        <TransactionHistory transactions={transactions} />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Dashboard from './Dashboard/Dashboard';\n\nclass App extends Component {\n  state = {};\n\n  render() {\n    return (\n      <>\n        <Dashboard />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"controls_controls__3z_YP\",\"controls__input\":\"controls_controls__input__36kvv\",\"controls__button\":\"controls_controls__button__2Jldp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"balance_balance__XNG3U\",\"total__deposit\":\"balance_total__deposit__3nR9b\",\"total__withdraw\":\"balance_total__withdraw__2Wbqv\",\"total__balance\":\"balance_total__balance__1zLiN\"};"],"sourceRoot":""}